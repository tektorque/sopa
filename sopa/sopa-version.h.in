/* -*- Mode: C; indent-tabs-mode: t; c-basic-offset: 2; tab-width: 2 -*-  */
/*
 * sopa-version.h
 * Copyright (C) 2014 Tektorque, Lda <geral@tektorque.com>
 * 
 * sopa is free software: you can redistribute it and/or modify it
 * under the terms of the GNU General Public License as published by the
 * Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * sopa is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License along
 * with this program.  If not, see <http://www.gnu.org/licenses/>.
 */


#if !defined(SOPA_H_INSIDE) && !defined(SOPA_COMPILATION)
#error "Only <sopa/sopa.h> can be included directly.h"
#endif

/**
 * SECTION:sopa-version
 * @short_description: Versioning utility macros
 *
 * Sopa offers a set of macros for checking the version of the library
 * an application was linked to.
 */

#ifndef __SOPA_VERSION_H__
#define __SOPA_VERSION_H__

/**
 * SOPA_MAJOR_VERSION:
 *
 * The major version of the Sopa clibrary (1 if version is 1.2.3)
 */
#define SOPA_MAJOR_VERSION              (@SOPA_MAJOR_VERSION@)

/**
 * SOPA_MINOR_VERSION:
 *
 * The minor version of the Sopa library (2, if version is 1.2.3)
 */
#define SOPA_MINOR_VERSION              (@SOPA_MINOR_VERSION@)

/**
 * SOPA_MICRO_VERSION:
 *
 * The micro version of the Sopa library (3, if version is 1.2.3)
 */
#define SOPA_MICRO_VERSION              (@SOPA_MICRO_VERSION@)

/**
 * SOPA_VERSION_S:
 *
 * The full version of the Sopa library, in string form (suited for
 * string concatenation)
 */
#define SOPA_VERSION_S                  "@SOPA_VERSION@"

/**
 * SOPA_VERSION_HEX:
 *
 * Numerically encoded version of the Sopa library, like 0x010203
 */
#define SOPA_VERSION_HEX                (SOPA_MAJOR_VERSION << 24 | \
                                         SOPA_MINOR_VERSION << 16 | \
                                         SOPA_MICRO_VERSION <<  8)
/**
 * SOPA_CHECK_VERSION:
 * @major: major version, like 1 in 1.2.3
 * @minor: minor version, like 2 in 1.2.3
 * @micro: micro version, like 3 in 1.2.3
 *
 * Evaluates to %TRUE if the version of the Sopa library is greater
 * than @major, @minor and @micro
 */
#define SOPA_CHECK_VERSION(major,minor,micro)   \
        (SOPA_MAJOR_VERSION > (major) || \
         (SOPA_MAJOR_VERSION == (major) && SOPA_MINOR_VERSION > (minor)) || \
         (SOPA_MAJOR_VERSION == (major) && SOPA_MINOR_VERSION == (minor) && SOPA_MICRO_VERSION >= (micro)))

#endif /* __SOPA_VERSION_H__ */
